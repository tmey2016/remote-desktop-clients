0. On Linux, install Eclipse Neon for Android Developers and ADT Plugin.
   a) Point Eclipse at a valid Android SDK installation location.
   b) Install ADT Plugin:
      Help > Install New Software.
      Click Add, in the top-right corner.
      In the Add Repository dialog, name it ADT Plugin and specify location to be
        https://dl-ssl.google.com/android/eclipse/

1. Install sqlitegen into Eclipse.

   a) Download sqlitegen plugin v0.1.19 from:
      https://github.com/iiordanov/sqlitegen-secure/releases/download/v0.1.19/sqlitegen_eclipse_site_0.1.19.jar

      NOTE: Using an older version of the plugin may not work because
      of the switch to the sqlcipher release of sqlite.

   b) Help -> Install New Software
   c) Add -> Archive
   d) Browse to the downloaded jar file and select it.
   e) Give it a name and click OK
   f) Select "Uncategorized"
   g) Click Next and follow the installation process.
   h) Restart Eclipse.

2. Clone the FreeRDP projects in the parent directory of where you
   cloned bVNC (remote-desktop-clients) project:
   git clone git://github.com/FreeRDP/FreeRDP.git

   The current version of bVNC/aRDP use the master branch.

   You should now have bVNC and FreeRDP side by side in the same
   directory.

   Add bVNC, ZoomerWithKeys and PubkeyGenerator from the
   bVNC/eclipse_projects/ directory to Eclipse as existing Android
   projects.
  
   Some modifications are needed to the freeRDPCore project because
   it is set up to be developed under the ADT IDE.
   - Create the links in FreeRDP/client/Android/Studio/freeRDPCore/src/main:
       libs -> jniLibs/
       src -> java/
   - Import client/Android/Studio/freeRDPCore into Eclipse as
     "Existing Android Code"
   - In the Project Properties, change Project Build Target to Android 7.0+
   - Also there, in Java Build Path->Libraries->Add External JARs, add:
       android-support-v4.jar
       android-support-v7-appcompat.jar
     from your Android SDK.
   - Also there, make sure Android->Is Library checkbox is checked.

3. Ensure ZoomerWithKeys, PubkeyGenerator, and FreeRDPCore projects
   are called exactly as written here by right-clicking 
   on each of them, then selecting Refactor->Rename

3. Add the ZoomerWithKeys, PubkeyGenerator, and FreeRDPCore projects
   as Library References to bVNC (right-click on the bVNC project
   and select Properties -> Android -> Library). If they are not,
   add them.

4. Ensure that ZoomerWithKeys, PubkeyGenerator, and FreeRDPCore 
   are specified as "Required projects on the build path" (right-
   click on the bVNC project, and select Properties -> Java Build
   Path -> Projects). If they are not, add them.

5. Ensure that ZoomerWithKeys, PubkeyGenerator, and FreeRDPCore
   are referenced in Properties -> Project References (put
   checkmarks on projects).

6. To build and successfully run aSPICE, you need to:
   - Unpack gstreamer-sdk 1.4.5 into /opt/gstreamer. I obtained my copy from:
     https://gstreamer.freedesktop.org/data/pkg/android/1.4.5/gstreamer-1.0-android-arm-release-1.4.5.tar.bz2
     Newer versions either crash or have GNUtls errors that need work.

   - Edit AndroidManifest.xml and change android:label="bVNC" and android:name="bVNC"
     to android:label="aSPICE" and android:name="aSPICE" respectively.

   - cd bVNC/eclipse_projects/bVNC

   - Replace all instances of aSPICE with bVNC in native code (.c and .h files).
     This requirement should go away in the future. You can use the following command:
       find jni/src -name \*.h -o -name \*.c -exec sed -i 's/aSPICE/bVNC/' {} \;

   - ndk-build GSTREAMER_SDK_ROOT_ANDROID=/opt/gstreamer -j 4

   - Unfortunately, currently ndk-build destroys other pre-existing libraries in eclipse_projects/bVNC/libs,
     so after successfully building libspice and libgstreamer, one has to git checkout the files which were deleted.

   - Force one boolean variable to be true. You can use the following command:
       find ./ -name \*.java -exec sed -i 's/isSpice = .*;/isSpice = true;/' {} \;

   - You may have to select the "Android private libraries" entry in
       Project Properties->Java Build Path->Order and Export
     if you have it.

   - Enable requesting the RECORD_AUDIO permission in AndroidManifest.xml with the following sed command:
     sed -i 's/<!--RECORD_AUDIO-->/<uses-permission android:name="android.permission.RECORD_AUDIO"><\/uses-permission>/g' AndroidManifest.xml

Please inform me if (6) needs to be expanded (i.e. if you needed to do
anything else in addition to the above.
